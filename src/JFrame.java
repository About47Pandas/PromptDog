/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tanner
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    public JFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        groupPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        hardwarePanel = new javax.swing.JPanel();
        hardwareProgress = new javax.swing.JProgressBar();
        osLabel = new javax.swing.JLabel();
        osValue = new javax.swing.JLabel();
        systemTypeLabel = new javax.swing.JLabel();
        systemTypeValue = new javax.swing.JLabel();
        biosLabel = new javax.swing.JLabel();
        biosValue = new javax.swing.JLabel();
        memoryLabel = new javax.swing.JLabel();
        macValue1 = new javax.swing.JLabel();
        processorsLabel = new javax.swing.JLabel();
        processorValue = new javax.swing.JLabel();
        hardwareButton = new javax.swing.JButton();
        networkInternalPanel = new javax.swing.JPanel();
        networkProgress = new javax.swing.JProgressBar();
        hostNameLabel = new javax.swing.JLabel();
        hostNameValue = new javax.swing.JLabel();
        privateIPLabel = new javax.swing.JLabel();
        privateIPValue = new javax.swing.JLabel();
        publicIPLabel = new javax.swing.JLabel();
        publicIPValue = new javax.swing.JLabel();
        macLabel = new javax.swing.JLabel();
        macValue = new javax.swing.JLabel();
        subnetLabek = new javax.swing.JLabel();
        dnsLabel = new javax.swing.JLabel();
        dnsValue = new javax.swing.JLabel();
        subnetValue = new javax.swing.JLabel();
        networkButton = new javax.swing.JButton();
        networkExternalPanel = new javax.swing.JPanel();
        privateIPLabel4 = new javax.swing.JLabel();
        pingValue = new javax.swing.JLabel();
        netstatLabel = new javax.swing.JLabel();
        netstatValue = new javax.swing.JLabel();
        wifiLabel = new javax.swing.JLabel();
        wifiValue = new javax.swing.JLabel();
        networkButton1 = new javax.swing.JButton();
        networkProgress1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setName(""); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("PromptDog\n\nWilliam Barden - Team Leader\nTanner Porteous\nCaleb Phillips\nNicholas Klein\nNicholas Norman\n\nCIT 280");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("PromptDog Logo");

        javax.swing.GroupLayout groupPanelLayout = new javax.swing.GroupLayout(groupPanel);
        groupPanel.setLayout(groupPanelLayout);
        groupPanelLayout.setHorizontalGroup(
            groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, groupPanelLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        groupPanelLayout.setVerticalGroup(
            groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(groupPanelLayout.createSequentialGroup()
                .addGroup(groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(groupPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(groupPanelLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel1)))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PromptDog", groupPanel);

        osLabel.setText("OS Version:");

        osValue.setText("\"os value\"");

        systemTypeLabel.setText("System Type:");

        systemTypeValue.setText("\"system type value\"");

        biosLabel.setText("BIOS Version:");

        biosValue.setText("\"bios value\"");

        memoryLabel.setText("Total Memory:");

        macValue1.setText("\"memory value\"");

        processorsLabel.setText("Processors:");

        processorValue.setText("\"processor value\"");

        hardwareButton.setText("Run");

        javax.swing.GroupLayout hardwarePanelLayout = new javax.swing.GroupLayout(hardwarePanel);
        hardwarePanel.setLayout(hardwarePanelLayout);
        hardwarePanelLayout.setHorizontalGroup(
            hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hardwarePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hardwarePanelLayout.createSequentialGroup()
                        .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(osLabel)
                            .addComponent(systemTypeLabel)
                            .addComponent(biosLabel)
                            .addComponent(memoryLabel)
                            .addComponent(processorsLabel))
                        .addGap(51, 51, 51)
                        .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(processorValue)
                            .addComponent(macValue1)
                            .addComponent(biosValue)
                            .addComponent(systemTypeValue)
                            .addComponent(osValue))
                        .addContainerGap(462, Short.MAX_VALUE))
                    .addGroup(hardwarePanelLayout.createSequentialGroup()
                        .addComponent(hardwareButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hardwareProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        hardwarePanelLayout.setVerticalGroup(
            hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hardwarePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(osLabel)
                    .addComponent(osValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systemTypeLabel)
                    .addComponent(systemTypeValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(biosLabel)
                    .addComponent(biosValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memoryLabel)
                    .addComponent(macValue1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processorsLabel)
                    .addComponent(processorValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 231, Short.MAX_VALUE)
                .addGroup(hardwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hardwareProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hardwareButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Hardware", hardwarePanel);

        hostNameLabel.setText("Host Name:");

        hostNameValue.setText("\"host name value\"");

        privateIPLabel.setText("Private IP:");

        privateIPValue.setText("\"private ip value\"");

        publicIPLabel.setText("Public IP:");

        publicIPValue.setText("\"public ip value\"");

        macLabel.setText("MAC Address:");

        macValue.setText("\"mac address value\"");

        subnetLabek.setText("Subnet Mask:");

        dnsLabel.setText("DNS:");

        dnsValue.setText("\"dns value\"");

        subnetValue.setText("\"subnet value\"");

        networkButton.setText("Run");

        javax.swing.GroupLayout networkInternalPanelLayout = new javax.swing.GroupLayout(networkInternalPanel);
        networkInternalPanel.setLayout(networkInternalPanelLayout);
        networkInternalPanelLayout.setHorizontalGroup(
            networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkInternalPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(networkInternalPanelLayout.createSequentialGroup()
                        .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dnsLabel)
                            .addComponent(subnetLabek))
                        .addGap(55, 55, 55)
                        .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subnetValue)
                            .addComponent(dnsValue)))
                    .addGroup(networkInternalPanelLayout.createSequentialGroup()
                        .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hostNameLabel)
                            .addComponent(privateIPLabel)
                            .addComponent(publicIPLabel)
                            .addComponent(macLabel))
                        .addGap(51, 51, 51)
                        .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(macValue)
                            .addComponent(publicIPValue)
                            .addComponent(privateIPValue)
                            .addComponent(hostNameValue))))
                .addContainerGap(451, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, networkInternalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(networkButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networkProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        networkInternalPanelLayout.setVerticalGroup(
            networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, networkInternalPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostNameLabel)
                    .addComponent(hostNameValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(privateIPLabel)
                    .addComponent(privateIPValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publicIPLabel)
                    .addComponent(publicIPValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(macLabel)
                    .addComponent(macValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dnsLabel)
                    .addComponent(dnsValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subnetLabek)
                    .addComponent(subnetValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addGroup(networkInternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(networkProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(networkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Networking Internal", networkInternalPanel);

        privateIPLabel4.setText("Google Ping:");

        pingValue.setText("\"google ping value\"");

        netstatLabel.setText("Netstat:");

        netstatValue.setText("\"netstat value\"");

        wifiLabel.setText("Wifi Type:");

        wifiValue.setText("\"wifi type value\"");

        networkButton1.setText("Run");

        javax.swing.GroupLayout networkExternalPanelLayout = new javax.swing.GroupLayout(networkExternalPanel);
        networkExternalPanel.setLayout(networkExternalPanelLayout);
        networkExternalPanelLayout.setHorizontalGroup(
            networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkExternalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(networkExternalPanelLayout.createSequentialGroup()
                        .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(privateIPLabel4)
                            .addComponent(netstatLabel)
                            .addComponent(wifiLabel))
                        .addGap(55, 55, 55)
                        .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wifiValue)
                            .addComponent(netstatValue)
                            .addComponent(pingValue))
                        .addGap(0, 464, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, networkExternalPanelLayout.createSequentialGroup()
                        .addComponent(networkButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(networkProgress1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        networkExternalPanelLayout.setVerticalGroup(
            networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkExternalPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(privateIPLabel4)
                    .addComponent(pingValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netstatLabel)
                    .addComponent(netstatValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wifiLabel)
                    .addComponent(wifiValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                .addGroup(networkExternalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(networkProgress1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(networkButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Networking External", networkExternalPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel biosLabel;
    private javax.swing.JLabel biosValue;
    private javax.swing.JLabel dnsLabel;
    private javax.swing.JLabel dnsValue;
    private javax.swing.JPanel groupPanel;
    private javax.swing.JButton hardwareButton;
    private javax.swing.JPanel hardwarePanel;
    private javax.swing.JProgressBar hardwareProgress;
    private javax.swing.JLabel hostNameLabel;
    private javax.swing.JLabel hostNameValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel macLabel;
    private javax.swing.JLabel macValue;
    private javax.swing.JLabel macValue1;
    private javax.swing.JLabel memoryLabel;
    private javax.swing.JLabel netstatLabel;
    private javax.swing.JLabel netstatValue;
    private javax.swing.JButton networkButton;
    private javax.swing.JButton networkButton1;
    private javax.swing.JPanel networkExternalPanel;
    private javax.swing.JPanel networkInternalPanel;
    private javax.swing.JProgressBar networkProgress;
    private javax.swing.JProgressBar networkProgress1;
    private javax.swing.JLabel osLabel;
    private javax.swing.JLabel osValue;
    private javax.swing.JLabel pingValue;
    private javax.swing.JLabel privateIPLabel;
    private javax.swing.JLabel privateIPLabel4;
    private javax.swing.JLabel privateIPValue;
    private javax.swing.JLabel processorValue;
    private javax.swing.JLabel processorsLabel;
    private javax.swing.JLabel publicIPLabel;
    private javax.swing.JLabel publicIPValue;
    private javax.swing.JLabel subnetLabek;
    private javax.swing.JLabel subnetValue;
    private javax.swing.JLabel systemTypeLabel;
    private javax.swing.JLabel systemTypeValue;
    private javax.swing.JLabel wifiLabel;
    private javax.swing.JLabel wifiValue;
    // End of variables declaration//GEN-END:variables
}
